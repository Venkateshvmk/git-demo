<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[<div style="display:block;margin-left:10px;"></div>]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="544" started-at="2017-04-18T10:47:09Z" finished-at="2017-04-18T10:47:10Z">
    <groups>
      <group name="P1">
        <method signature="Amazonweb.Scenario1()[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="Scenario1" class="com.amazon.tests.Amazonweb"/>
      </group> <!-- P1 -->
    </groups>
    <test name="Default test" duration-ms="544" started-at="2017-04-18T10:47:09Z" finished-at="2017-04-18T10:47:10Z">
      <class name="com.amazon.tests.Amazonweb">
        <test-method status="PASS" signature="setupSuit(org.testng.ITestContext)[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="setupSuit" is-config="true" duration-ms="16" started-at="2017-04-18T16:17:09Z" finished-at="2017-04-18T16:17:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6ab7a896]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuit -->
        <test-method status="SKIP" signature="Scenario1()[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="Scenario1" duration-ms="485" started-at="2017-04-18T16:17:09Z" finished-at="2017-04-18T16:17:09Z">
          <exception class="com.qmetry.qaf.automation.core.AutomationError">
            <message>
              <![CDATA[Timed out after 0 seconds: Unable to create driver instance in 1st attempt with retry timeout of 0 seconds. You can check/set value of 'driver.init.retry.timeout' appropriately to set retry timeout on driver initialization failure.
Failed to connect to binary FirefoxBinary(C:\Program Files\Mozilla Firefox\firefox.exe) on port 7055; process output follows: 
null
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'ICPL11529', ip: '10.11.31.73', os.name: 'Windows 8', os.arch: 'amd64', os.version: '6.2', java.version: '1.8.0_111'
Driver info: driver.version: FirefoxDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qmetry.qaf.automation.core.AutomationError: Timed out after 0 seconds: Unable to create driver instance in 1st attempt with retry timeout of 0 seconds. You can check/set value of 'driver.init.retry.timeout' appropriately to set retry timeout on driver initialization failure.
Failed to connect to binary FirefoxBinary(C:\Program Files\Mozilla Firefox\firefox.exe) on port 7055; process output follows: 
null
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'ICPL11529', ip: '10.11.31.73', os.name: 'Windows 8', os.arch: 'amd64', os.version: '6.2', java.version: '1.8.0_111'
Driver info: driver.version: FirefoxDriver
	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:129)
	at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:119)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:216)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:211)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.getDriverObj(UiDriverFactory.java:239)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.access$4(UiDriverFactory.java:234)
	at com.qmetry.qaf.automation.ui.UiDriverFactory$Browsers.getDriver(UiDriverFactory.java:417)
	at com.qmetry.qaf.automation.ui.UiDriverFactory$Browsers.access$5(UiDriverFactory.java:405)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.getDriver(UiDriverFactory.java:227)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:94)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:511)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:1)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	at com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:410)
	at com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:198)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:47)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)
	at com.qmetry.qaf.automation.ui.AbstractTestPage.<init>(AbstractTestPage.java:86)
	at com.qmetry.qaf.automation.ui.AbstractTestPage.<init>(AbstractTestPage.java:93)
	at com.qmetry.qaf.automation.ui.WebDriverBaseTestPage.<init>(WebDriverBaseTestPage.java:62)
	at com.qmetry.qaf.automation.ui.WebDriverBaseTestPage.<init>(WebDriverBaseTestPage.java:58)
	at com.amazon.pages.AutoTestPage.<init>(AutoTestPage.java:12)
	at com.amazon.tests.Amazonweb.Scenario1(Amazonweb.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:781)
	at org.testng.TestRunner.run(TestRunner.java:635)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- com.qmetry.qaf.automation.core.AutomationError -->
          <reporter-output>
            <line>
              <![CDATA[<div style="display:block;margin-left:10px;"></div>]]>
            </line>
          </reporter-output>
        </test-method> <!-- Scenario1 -->
        <test-method status="PASS" signature="setupTest(org.testng.ITestContext)[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="setupTest" is-config="true" duration-ms="0" started-at="2017-04-18T16:17:09Z" finished-at="2017-04-18T16:17:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6ab7a896]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setup(org.testng.ITestContext)[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="setup" is-config="true" duration-ms="0" started-at="2017-04-18T16:17:09Z" finished-at="2017-04-18T16:17:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6ab7a896]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setupMethod(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="setupMethod" is-config="true" duration-ms="0" started-at="2017-04-18T16:17:09Z" finished-at="2017-04-18T16:17:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.amazon.tests.Amazonweb.Scenario1()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6ab7a896]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestContext)[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="afterTest" is-config="true" duration-ms="0" started-at="2017-04-18T16:17:10Z" finished-at="2017-04-18T16:17:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6ab7a896]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-18T16:17:10Z" finished-at="2017-04-18T16:17:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6ab7a896]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Scenario1 status=SKIP method=Amazonweb.Scenario1()[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83] output=<div style="display:block;margin-left:10px;"></div>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass(org.testng.ITestContext)[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-18T16:17:10Z" finished-at="2017-04-18T16:17:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6ab7a896]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuit(org.testng.ITestContext)[pri:0, instance:com.amazon.tests.Amazonweb@704d6e83]" name="afterSuit" is-config="true" duration-ms="0" started-at="2017-04-18T16:17:10Z" finished-at="2017-04-18T16:17:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6ab7a896]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuit -->
      </class> <!-- com.amazon.tests.Amazonweb -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
